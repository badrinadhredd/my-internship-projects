import random
import string

def generate_password(length=12):
    # Define character sets
    uppercase_letters = string.ascii_uppercase
    lowercase_letters = string.ascii_lowercase
    digits = string.digits
    special_characters = string.punctuation

    # Ensure at least one character from each set is included
    password = random.choice(uppercase_letters) + random.choice(lowercase_letters) + random.choice(digits) + random.choice(special_characters)

    # Generate the rest of the password
    password += ''.join(random.choice(uppercase_letters + lowercase_letters + digits + special_characters) for _ in range(length - 4))

    # Shuffle the password to randomize the order
    password_list = list(password)
    random.shuffle(password_list)
    password = ''.join(password_list)

    return password

def generate_multiple_passwords(num_passwords, length=12):
    return [generate_password(length) for _ in range(num_passwords)]

if __name__ == "__main__":
    print("Welcome to the Secure Password Generator!")
    
    # Get user input for password length and quantity
    try:
        password_length = int(input("Enter the desired password length (at least 8 characters recommended): "))
        num_passwords = int(input("Enter the number of passwords to generate: "))
        
        if password_length < 8:
            raise ValueError("Password length should be at least 8 characters.")
        
        # Generate and print passwords
        passwords = generate_multiple_passwords(num_passwords, password_length)
        
        print("\nGenerated Passwords:")
        for i, password in enumerate(passwords, start=1):
            print(f"Password {i}: {password}")
    
    except ValueError as e:
        print(f"Error: {e}")
